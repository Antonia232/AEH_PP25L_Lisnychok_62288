package pl.pp;

public class Main {

    public static long factorialIterative(int n) {
        long result = 1;
        for (int i = 2; i <= n; i++) {
            result *= i;
        }
        return result;
    }

    public static long factorialRecursive(int n) {
        if (n == 0 || n == 1) {
            return 1;
        }
        return n * factorialRecursive(n - 1);
    }

    public static void main(String[] args) {
        int N =12 ;


        long startTimeIterative = System.nanoTime();
        long iterativeResult = factorialIterative(N);
        long endTimeIterative = System.nanoTime();
        long durationIterative = endTimeIterative - startTimeIterative;

        long startTimeRecursive = System.nanoTime();
        long recursiveResult = factorialRecursive(N);
        long endTimeRecursive = System.nanoTime();
        long durationRecursive = endTimeRecursive - startTimeRecursive;


        System.out.println("Silnia (iteracyjnie) dla " + N + " = " + iterativeResult);
        System.out.println("Czas wykonania (iteracyjnie): " + durationIterative + " nanosekund");

        System.out.println("Silnia (rekurencyjnie) dla " + N + " = " + recursiveResult);
        System.out.println("Czas wykonania (rekurencyjnie): " + durationRecursive + " nanosekund");
    }
}
